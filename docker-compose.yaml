version: "3.9"  # optional since v1.27.0

services:
  nginx:
    build: ./docker/nginx
    ports:
      - "80:80"
      - "443:443"
#    volumes:
#      - docker/nginx/conf.d:/etc/nginx/conf.d
#      - docker/nginx/html:/var/www/html
#      - docker/nginx/includes:/etc/nginx/includes
#      - docker/ssl:/etc/ssl/certs/nginx
      
  foosjs:
    build: .
    image: foosjs
    ports:
      - "8081:80"
    env_file:
      - .env
    environment:
      - DEBUG=foosjs:* DEBUG_LEVEL=verbose yarn dev
      - JWT_SECRET=mysupersecretjwtsecret
      - MYSQL_HOST=db
      - MYSQL_USER=root
      - MYSQL_PASSWORD=mysecretpassword
      - EVENTSTORE_MYSQL_HOST=db
      - EVENTSTORE_MYSQL_USER=root
      - EVENTSTORE_MYSQL_PASSWORD=mysecretpassword
      - HOST=0.0.0.0
      - PORT=80

  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: mysecretpassword
    ports:
      - 3306:3306

  dbinit:
    image: mysql
    command: ["mysql", "-h", "db", "-u", "root", '-pmysecretpassword', "--execute=CREATE DATABASE IF NOT EXISTS events COLLATE latin1_danish_ci; CREATE DATABASE IF NOT EXISTS readmodels COLLATE latin1_danish_ci;"]
    environment:
      MYSQL_ROOT_PASSWORD: mysecretpassword    
    depends_on: 
      - db

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080